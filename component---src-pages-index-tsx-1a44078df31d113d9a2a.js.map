{"version":3,"sources":["webpack:///./src/components/Post.tsx","webpack:///./src/pages/index.tsx"],"names":["Wrapper","styled","div","StyledLink","Link","Container","CoverImage","img","Meta","Title","h1","Date","span","Excerpt","p","Post","post","image","path","date","title","excerpt","to","src","data","Layout","SEO","allMarkdownRemark","edges","map","node","frontmatter","cover","fields","slug","key","id"],"mappings":"2KAgBMA,EAAUC,IAAOC,IAAV,gEAAGD,CAAH,+EAUPE,EAAaF,YAAOG,QAAV,mEAAGH,CAAH,oBAIVI,EAAYJ,IAAOC,IAAV,kEAAGD,CAAH,mHAcTK,EAAaL,IAAOM,IAAV,mEAAGN,CAAH,8IAYVO,EAAOP,IAAOC,IAAV,6DAAGD,CAAH,wCAKJQ,EAAQR,IAAOS,GAAV,8DAAGT,CAAH,uBAILU,EAAOV,IAAOW,KAAV,6DAAGX,CAAH,oCAKJY,EAAUZ,IAAOa,EAAV,gEAAGb,CAAH,wDAwBEc,EAlBF,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,KACNC,EAA6CD,EAA7CC,MAAOC,EAAsCF,EAAtCE,KAAMC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,MAAOC,EAAmBL,EAAnBK,QAClC,OACE,kBAACrB,EAAD,KACE,kBAACG,EAAD,CAAYmB,GAAIJ,GACd,kBAACb,EAAD,KACE,kBAACC,EAAD,CAAYiB,IAAKN,IACjB,kBAACT,EAAD,KACE,kBAAC,EAAD,KAAOW,GACP,kBAACV,EAAD,KAAQW,GACR,kBAACP,EAAD,KAAUQ,Q,YCtDhBhB,EAAYJ,IAAOC,IAAV,uEAAGD,CAAH,+CAMA,qBACb,IAAMuB,EAAO,OAEb,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKN,MAAM,SACX,kBAAC,EAAD,KACGI,EAAKG,kBAAkBC,MAAMC,KAAI,YAA+B,IAA5BC,EAA4B,EAA5BA,KAC7Bd,EAAc,CAClBG,KAAMW,EAAKC,YAAYZ,KACvBE,QAASS,EAAKC,YAAYV,QAC1BJ,MAAOa,EAAKC,YAAYC,MACxBd,KAAMY,EAAKG,OAAOC,KAClBd,MAAOU,EAAKC,YAAYX,OAE1B,OAAO,kBAAC,EAAD,CAAMe,IAAKL,EAAKM,GAAIpB,KAAMA,W","file":"component---src-pages-index-tsx-1a44078df31d113d9a2a.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface IPost {\n  path: string;\n  date: string;\n  title: string;\n  excerpt: string;\n  image: string;\n}\n\nexport interface IPostProps {\n  post: IPost;\n}\n\nconst Wrapper = styled.div`\n  width: 50%;\n  padding: 0.5rem;\n\n  @media (max-width: 1000px) {\n    width: 100%;\n    padding: 0;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: #212529;\n`;\n\nconst Container = styled.div`\n  border-radius: 8px;\n  border: 1px solid #ced4da;\n\n  &:hover,\n  &:focus {\n    background: #f8f9fa;\n\n    h1 {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst CoverImage = styled.img`\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  width: 100%;\n  height: 18rem;\n  object-fit: cover;\n\n  @media (max-width: 1000px) {\n    height: 15rem;\n  }\n`;\n\nconst Meta = styled.div`\n  padding: 1.2rem;\n  padding-top: 0.5rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n`;\n\nconst Date = styled.span`\n  color: #495057;\n  font-weight: 300;\n`;\n\nconst Excerpt = styled.p`\n  color: #868e96;\n  font-weight: 400;\n  word-break: keep-all;\n`;\n\nconst Post = ({ post }: IPostProps) => {\n  const { image, path, date, title, excerpt }: IPost = post;\n  return (\n    <Wrapper>\n      <StyledLink to={path}>\n        <Container>\n          <CoverImage src={image} />\n          <Meta>\n            <Date>{date}</Date>\n            <Title>{title}</Title>\n            <Excerpt>{excerpt}</Excerpt>\n          </Meta>\n        </Container>\n      </StyledLink>\n    </Wrapper>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { INode } from '../types/graphql-extends';\nimport { Query } from '../types/graphql-types';\n\nimport Layout from '../components/Layout';\nimport Post, { IPost } from '../components/Post';\nimport SEO from '../components/SEO';\n\nconst LatestPostListQuery = graphql`\n  query LatestPostListQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY년 MM월 DD일\")\n            excerpt\n            cover\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst Container = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-flow: wrap;\n`;\n\nexport default () => {\n  const data = useStaticQuery<Query>(LatestPostListQuery);\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Container>\n        {data.allMarkdownRemark.edges.map(({ node }: { node: INode }) => {\n          const post: IPost = {\n            date: node.frontmatter.date,\n            excerpt: node.frontmatter.excerpt,\n            image: node.frontmatter.cover,\n            path: node.fields.slug,\n            title: node.frontmatter.title,\n          };\n          return <Post key={node.id} post={post} />;\n        })}\n      </Container>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}